# Multi-stage Dockerfile for MSQ Transaction Monitor
# Build argument to specify which service to build
ARG SERVICE_NAME

# =============================================================================
# Base stage - Common base for all Node.js services
# =============================================================================
FROM node:18-alpine AS base
WORKDIR /app
RUN apk add --no-cache python3 make g++ curl

# Copy package files and install dependencies
COPY package.json ./
COPY nx.json ./
COPY apps/tx-api/package.json ./apps/tx-api/
COPY libs/*/package.json ./libs/*/
RUN npm install

# =============================================================================
# Development stage for tx-dashboard (React with Vite)
# =============================================================================
FROM base AS tx-dashboard
WORKDIR /app

# Copy only tx-dashboard and required libs
COPY apps/tx-dashboard ./apps/tx-dashboard/
COPY libs ./libs/

EXPOSE 3000
CMD ["npx", "nx", "serve", "tx-dashboard", "--host", "0.0.0.0", "--port", "3000"]

# =============================================================================
# Development stage for tx-api (Express.js)
# =============================================================================
FROM base AS tx-api
WORKDIR /app

# Copy only tx-api and required libs
COPY apps/tx-api ./apps/tx-api/
COPY libs ./libs/

# Install tsx in tx-api directory
WORKDIR /app/apps/tx-api
RUN npm install

EXPOSE 8000
CMD ["npm", "start"]

# =============================================================================
# Development stage for chain-scanner (Node.js)
# =============================================================================
FROM base AS chain-scanner
WORKDIR /app

# Copy only chain-scanner and required libs
COPY apps/chain-scanner ./apps/chain-scanner/
COPY libs ./libs/

EXPOSE 8001
CMD ["npx", "nx", "serve", "chain-scanner", "--host", "0.0.0.0"]

# =============================================================================
# Development stage for tx-analyzer (Python FastAPI)
# =============================================================================
FROM python:3.11-slim AS tx-analyzer
WORKDIR /app
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy only tx-analyzer
COPY apps/tx-analyzer/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

COPY apps/tx-analyzer ./
EXPOSE 8002
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]