networks:
  msq-tx-monitor-network:
    driver: bridge

volumes:
  msq-tx-mysql-data:
  msq-tx-monitor-redis-data:

services:
  # =============================================================================
  # Reverse Proxy
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: msq-tx-monitor-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - msq-tx-monitor-network
    depends_on:
      tx-dashboard:
        condition: service_healthy
      tx-api:
        condition: service_healthy
      chain-scanner:
        condition: service_healthy
      tx-analyzer:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # Database Services
  # =============================================================================
  mysql:
    image: mysql:8.0
    container_name: msq-tx-monitor-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: msq-tx-monitor
    ports:
      - 3306:3306
    volumes:
      - msq-tx-mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - msq-tx-monitor-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5

  redis:
    image: redis/redis-stack:latest
    container_name: msq-tx-monitor-redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - msq-tx-monitor-redis-data:/data
    networks:
      - msq-tx-monitor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  tx-dashboard:
    build:
      context: ..
      dockerfile: docker/Dockerfile.packages
      target: tx-dashboard
    container_name: msq-tx-monitor-dashboard
    restart: unless-stopped
    # No external port exposure - accessed through Nginx
    expose:
      - "3000"
    networks:
      - msq-tx-monitor-network
    depends_on:
      tx-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      timeout: 10s
      retries: 5

  tx-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.packages
      target: tx-api
    container_name: msq-tx-monitor-api
    restart: unless-stopped
    # No external port exposure - accessed through Nginx
    expose:
      - "8000"
    environment:
      - PORT=8000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=msq-tx-monitor
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=pass
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - msq-tx-monitor-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 10s
      retries: 5

  chain-scanner:
    build:
      context: ..
      dockerfile: docker/Dockerfile.packages
      target: chain-scanner
    container_name: msq-tx-monitor-chain-scanner
    restart: unless-stopped
    # No external port exposure - accessed through Nginx
    expose:
      - "8001"
    environment:
      - CHAIN_SCANNER_PORT=8001
      # HTTP RPC endpoints (no API keys needed)
      - PRIMARY_RPC_ENDPOINT=https://polygon-rpc.com
      - BACKUP_RPC_ENDPOINT=https://polygon-bor.publicnode.com
      # Database configuration (same as tx-api)
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=msq-tx-monitor
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=pass
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # HTTP RPC configuration
      - RPC_TIMEOUT=10000
      - RPC_RECONNECT_INTERVAL=5000
      - RPC_MAX_RECONNECT_ATTEMPTS=10
      # Monitoring configuration
      - BATCH_SIZE=100
      - PROCESSING_INTERVAL=1000
      - CONFIRMATION_BLOCKS=12
      - IGNORE_ZERO_VALUE_TRANSFERS=true
      - BLOCK_POLLING_INTERVAL=10000
      - REQUEST_DELAY=500
    networks:
      - msq-tx-monitor-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node' && nc -z localhost 8001"]
      timeout: 10s
      retries: 5

  tx-analyzer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.packages
      target: tx-analyzer
    container_name: msq-tx-monitor-analyzer
    restart: unless-stopped
    # No external port exposure - accessed through Nginx
    expose:
      - "8002"
    environment:
      - PORT=8002
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=msq-tx-monitor
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=pass
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - msq-tx-monitor-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      timeout: 10s
      retries: 5
