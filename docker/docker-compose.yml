networks:
  msq-tx-monitor-network:
    driver: bridge

volumes:
  msq-tx-mysql-data:
  msq-tx-monitor-redis-data:

services:
  # =============================================================================
  # Database Services
  # =============================================================================
  mysql:
    image: mysql:8.0
    container_name: msq-tx-monitor-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: msq-tx-monitor
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      TZ: Asia/Seoul
    ports:
      - 3306:3306
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["--sql-mode=NO_ENGINE_SUBSTITUTION", "--default-time-zone=+09:00"]
    networks:
      - msq-tx-monitor-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis/redis-stack:latest
    container_name: msq-tx-monitor-redis
    restart: unless-stopped
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - msq-tx-monitor-redis-data:/data
    networks:
      - msq-tx-monitor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: user
      PMA_PASSWORD: pass
    ports:
      - "8080:80"
    networks:
      - msq-tx-monitor-network
    depends_on:
      mysql:
        condition: service_healthy

  # tx-dashboard:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile.packages
  #     target: tx-dashboard
  #   container_name: msq-tx-monitor-dashboard
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
  #   environment:
  #     - NODE_ENV=development
  #     - VITE_API_URL=http://localhost:8000
  #     - VITE_WS_URL=ws://localhost:8001
  #   networks:
  #     - msq-tx-monitor-network
  #   depends_on:
  #     tx-api:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000"]
  #     timeout: 10s
  #     retries: 5

  tx-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.packages
      target: tx-api
    container_name: msq-tx-monitor-api
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      - NODE_ENV=development
      - PORT=8000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=msq-tx-monitor
      - MYSQL_USERNAME=user
      - MYSQL_PASSWORD=pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CORS_ORIGIN=http://localhost:3000
      - RATE_LIMIT_MAX_REQUESTS=100
    networks:
      - msq-tx-monitor-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 10s
      retries: 5

  # chain-scanner:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile.packages
  #     target: chain-scanner
  #   container_name: msq-tx-monitor-chain-scanner
  #   restart: unless-stopped
  #   ports:
  #     - 8001:8001
  #   environment:
  #     - NODE_ENV=development
  #     - WS_PORT=8001
  #     - POLYGON_RPC_URL=https://polygon-rpc.com
  #     - POLYGON_BACKUP_RPC_1=https://polygon.llamarpc.com
  #     - POLYGON_BACKUP_RPC_2=https://polygon.drpc.org
  #     - TOKEN_MSQ=0x0000000000000000000000000000000000000001
  #     - TOKEN_SUT=0x0000000000000000000000000000000000000002
  #     - TOKEN_KWT=0x0000000000000000000000000000000000000003
  #     - TOKEN_P2UC=0x0000000000000000000000000000000000000004
  #     - SCAN_INTERVAL_MS=5000
  #     - BLOCK_CONFIRMATION=12
  #     - MYSQL_HOST=mysql
  #     - MYSQL_PORT=3306
  #     - MYSQL_DATABASE=msq-tx-monitor
  #     - MYSQL_USERNAME=user
  #     - MYSQL_PASSWORD=pass
  #   networks:
  #     - msq-tx-monitor-network
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
  #     timeout: 10s
  #     retries: 5

  # tx-analyzer:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile.packages
  #     target: tx-analyzer
  #   container_name: msq-tx-monitor-analyzer
  #   restart: unless-stopped
  #   ports:
  #     - 8002:8002
  #   environment:
  #     - ENVIRONMENT=development
  #     - PORT=8002
  #     - MYSQL_HOST=mysql
  #     - MYSQL_PORT=3306
  #     - MYSQL_DATABASE=msq-tx-monitor
  #     - MYSQL_USERNAME=user
  #     - MYSQL_PASSWORD=pass
  #     - ANOMALY_THRESHOLD=0.85
  #     - WHALE_THRESHOLD=1000000
  #     - DETECTION_WINDOW_SIZE=100
  #   networks:
  #     - msq-tx-monitor-network
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
  #     timeout: 10s
  #     retries: 5
